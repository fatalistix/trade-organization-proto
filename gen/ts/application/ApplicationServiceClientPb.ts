/**
 * @fileoverview gRPC-Web generated client stub for application
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.25.3
// source: application/application.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as application_application_pb from '../application/application_pb'; // proto import: "application/application.proto"


export class ApplicationServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/application.ApplicationService/Create',
    grpcWeb.MethodType.UNARY,
    application_application_pb.CreateRequest,
    application_application_pb.CreateResponse,
    (request: application_application_pb.CreateRequest) => {
      return request.serializeBinary();
    },
    application_application_pb.CreateResponse.deserializeBinary
  );

  create(
    request: application_application_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<application_application_pb.CreateResponse>;

  create(
    request: application_application_pb.CreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: application_application_pb.CreateResponse) => void): grpcWeb.ClientReadableStream<application_application_pb.CreateResponse>;

  create(
    request: application_application_pb.CreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: application_application_pb.CreateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/application.ApplicationService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/application.ApplicationService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/application.ApplicationService/List',
    grpcWeb.MethodType.UNARY,
    application_application_pb.ListRequest,
    application_application_pb.ListResponse,
    (request: application_application_pb.ListRequest) => {
      return request.serializeBinary();
    },
    application_application_pb.ListResponse.deserializeBinary
  );

  list(
    request: application_application_pb.ListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<application_application_pb.ListResponse>;

  list(
    request: application_application_pb.ListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: application_application_pb.ListResponse) => void): grpcWeb.ClientReadableStream<application_application_pb.ListResponse>;

  list(
    request: application_application_pb.ListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: application_application_pb.ListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/application.ApplicationService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/application.ApplicationService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorApplication = new grpcWeb.MethodDescriptor(
    '/application.ApplicationService/Application',
    grpcWeb.MethodType.UNARY,
    application_application_pb.ApplicationRequest,
    application_application_pb.ApplicationResponse,
    (request: application_application_pb.ApplicationRequest) => {
      return request.serializeBinary();
    },
    application_application_pb.ApplicationResponse.deserializeBinary
  );

  application(
    request: application_application_pb.ApplicationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<application_application_pb.ApplicationResponse>;

  application(
    request: application_application_pb.ApplicationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: application_application_pb.ApplicationResponse) => void): grpcWeb.ClientReadableStream<application_application_pb.ApplicationResponse>;

  application(
    request: application_application_pb.ApplicationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: application_application_pb.ApplicationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/application.ApplicationService/Application',
        request,
        metadata || {},
        this.methodDescriptorApplication,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/application.ApplicationService/Application',
    request,
    metadata || {},
    this.methodDescriptorApplication);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/application.ApplicationService/Update',
    grpcWeb.MethodType.UNARY,
    application_application_pb.UpdateRequest,
    application_application_pb.UpdateResponse,
    (request: application_application_pb.UpdateRequest) => {
      return request.serializeBinary();
    },
    application_application_pb.UpdateResponse.deserializeBinary
  );

  update(
    request: application_application_pb.UpdateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<application_application_pb.UpdateResponse>;

  update(
    request: application_application_pb.UpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: application_application_pb.UpdateResponse) => void): grpcWeb.ClientReadableStream<application_application_pb.UpdateResponse>;

  update(
    request: application_application_pb.UpdateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: application_application_pb.UpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/application.ApplicationService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/application.ApplicationService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

}

